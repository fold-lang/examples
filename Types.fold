
type Result a b = Ok a | Error b


sum :: Num a => a -> a -> a

sum <Num a> :: a -> a -> a

sum :: (implicit Num) -> Num.t -> Num.t -> Num.t

sum :: (implicit Num) -> Num.t -> Num.t -> Num.t

sum :: {Num a} => Num.t -> Num.t -> Num.t

filter :: Fn (Fn a Bool) (Fn (List a) (List a))
filter :: (a -> Bool) -> [a] -> [a]


-- Interfaces
-- https://schani.wordpress.com/2014/06/11/associated-types-considered-weird/

interface (Eq n, Show n) => Graph (g n) {
    ...
}
